openapi: 3.0.0
servers:
  - url: https://educrat-be.onrender.com/api/v1
    description: production
  - url: http://localhost:3001/api/v1
    description: development
info:
  title: Educrat
  version: 1.0.0
  description: Educrat API
paths:
  /auth/register:
    post:
      security: []
      tags:
        - auth
      description: "register user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"
        400:
          $ref: "#/components/schemas/DefaultError"
  /auth/verification:
    post:
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                token:
                  type: string
      responses:
        200:
          $ref: "#/components/schemas/DefaultSucess"
        500:
          $ref: "#/components/schemas/DefaultError"
  /auth/verification/request:
    post:
      description: "request for verification link"
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"
        500:
          $ref: "#/components/schemas/DefaultError"
  /auth/login:
    post:
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credentials:
                  type: string
                password:
                  type: string
      responses:
        500:
          $ref: "#/components/schemas/DefaultError"
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
  /auth/google:
    post:
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
      responses:
        500:
          $ref: "#/components/schemas/DefaultError"
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
  /auth/password/forgot:
    post:
      description: request password reset link
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        500:
          $ref: "#/components/schemas/DefaultError"
        200:
          $ref: "#/components/schemas/DefaultSuccess"
  /auth/password/reset:
    patch:
      security: []
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                token:
                  type: string
                password:
                  type: string
      responses:
        404:
          $ref: "#/components/schemas/DefaultError"
        200:
          $ref: "#/components/schemas/DefaultSuccess"
components:
  schemas:
    # Defaults
    DefaultSuccess:
      description: "Success"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    DefaultError:
      description: "Error"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    # Major Schemas
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        profilePicture:
          type: string
        _id:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        userId:
          type: string
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
tags:
  - name: auth
